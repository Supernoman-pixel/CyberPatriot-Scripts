#!/bin/bash

#Packages
sudo apt install -y libpam-pwquality
cd /etc/pam.d


#Permissions (For pam files)

sudo chmod 755 /etc/pam.d
sudo chmod 644 chfn
sudo chmod 644 chpasswd
sudo chmod 644 chsh
sudo chmod 644 common-account
sudo chmod 644 common-auth
sudo chmod 644 common-password
sudo chmod 644 common-session
sudo chmod 644 common-session-noninteractive
sudo chmod 644 cron
sudo chmod 644 cups
sudo chmod 644 lightdm
sudo chmod 644 lightdm-autologin
sudo chmod 644 lightdm-greeter
sudo chmod 644 login
sudo chmod 644 newusers
sudo chmod 644 other
sudo chmod 644 passwd
sudo chmod 644 polkit-1
sudo chmod 644 ppp
sudo chmod 644 runuser
sudo chmod 644 runuser-l
sudo chmod 644 su
sudo chmod 644 su-l
sudo chmod 644 sudo
sudo chmod 644 sudo-i
sudo chmod 644 vmtoolsd
sudo chown root:root /etc/pam.d
sudo chown root:root chfn
sudo chown root:root chpasswd
sudo chown root:root chsh
sudo chown root:root common-account
sudo chown root:root common-auth
sudo chown root:root common-password
sudo chown root:root common-session
sudo chown root:root common-session-noninteractive
sudo chown root:root cron
sudo chown root:root cups
sudo chown root:root lightdm
sudo chown root:root lightdm-autologin
sudo chown root:root lightdm-greeter
sudo chown root:root login
sudo chown root:root newusers
sudo chown root:root other
sudo chown root:root passwd
sudo chown root:root polkit-1
sudo chown root:root ppp
sudo chown root:root runuser
sudo chown root:root runuser-l
sudo chown root:root su
sudo chown root:root su-l
sudo chown root:root sudo
sudo chown root:root sudo-i
sudo chown root:root vmtoolsd
sudo chattr -ia /etc/pam.d
sudo chattr -ia chfn
sudo chattr -ia chpasswd
sudo chattr -ia chsh
sudo chattr -ia common-account
sudo chattr -ia common-auth
sudo chattr -ia common-password
sudo chattr -ia common-session
sudo chattr -ia common-session-noninteractive
sudo chattr -ia cron
sudo chattr -ia cups
sudo chattr -ia lightdm
sudo chattr -ia lightdm-autologin
sudo chattr -ia lightdm-greeter
sudo chattr -ia login
sudo chattr -ia newusers
sudo chattr -ia other
sudo chattr -ia passwd
sudo chattr -ia polkit-1
sudo chattr -ia ppp
sudo chattr -ia runuser
sudo chattr -ia runuser-l
sudo chattr -ia su
sudo chattr -ia su-l
sudo chattr -ia sudo
sudo chattr -ia sudo-i
sudo chattr -ia vmtoolsd

#Contents

#CHFN


sudo echo -e "\nChanging configuration for /etc/pam.d/chfn\n"
sudo echo -e "
#
# The PAM configuration file for the Shadow 'chfn' service
#

# This allows root to change user infomation without being
# prompted for a password
auth            sufficient      pam_rootok.so

# The standard Unix authentication modules, used with
# NIS (man nsswitch) as well as normal /etc/passwd and
# /etc/shadow entries.
@include common-auth
@include common-account
@include common-session
" > /etc/pam.d/chfn
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/chfn\n"


#CHPASSWD


sudo echo -e '\nChanging configuration for /etc/pam.d/chpasswd\n'
sudo echo -e "
# The PAM configuration file for the Shadow 'chpasswd' service
#

@include common-password
" > /etc/pam.d/chpasswd
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/chfn\n"


#CHSH


sudo echo -e "\nChanging configuration for /etc/pam.d/chsh\n"
sudo echo -e "
#
# The PAM configuration file for the Shadow 'chsh' service
#

# This will not allow a user to change their shell unless
# their current one is listed in /etc/shells. This keeps
# accounts with special shells from changing them.
auth       required   pam_shells.so

# This allows root to change user shell without being
# prompted for a password
auth            sufficient      pam_rootok.so

# The standard Unix authentication modules, used with
# NIS (man nsswitch) as well as normal /etc/passwd and
# /etc/shadow entries.
@include common-auth
@include common-account
@include common-session
" > /etc/pam.d/chsh
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/chsh\n"


#COMMON ACCOUNT


sudo echo -e "\nChanging configuration file for /etc/pam.d/common-account\n"
sudo echo -e "
#
# /etc/pam.d/common-account - authorization settings common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of the authorization modules that define
# the central access policy for use on the system.  The default is to
# only deny service to users whose accounts are expired in /etc/shadow.
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.
#
# here are the per-package modules (the 'Primary' block)
account [success=1 new_authtok_reqd=done default=ignore]        pam_unix.so
# here's the fallback if no module succeeds
account requisite                       pam_deny.so
account required                        pam_permit.so
" > /etc/pam.d/common-account.tmp

sudo cp -f /etc/pam.d/common-account.tmp /etc/pam.d/common-account
sudo rm -f /etc/pam.d/common-account.tmp
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/common-account\n"


#COMMON AUTH


sudo echo -e "\nChanging configuration for /etc/pam.d/common-auth\n"
sudo echo -e "
#
# /etc/pam.d/common-auth - authentication settings common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of the authentication modules that define
# the central authentication scheme for use on the system
# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the
# traditional Unix authentication mechanisms.
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
auth    [success=1 default=ignore]      pam_unix.so
# here's the fallback if no module succeeds
auth    requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth    required                        pam_permit.so
# and here are more per-package modules (the "Additional" block)
auth    optional                        pam_cap.so
# end of pam-auth-update config
auth    required                        pam_faildelay.so delay=4000000
" > /etc/pam.d/common-auth
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/common-auth\n"


# COMMON PASSWORD


sudo echo -e "\nChanging configuration for /etc/pam.d/common-password\n"
sudo echo -e "
#
# /etc/pam.d/common-password - password-related modules common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of modules that define the services to be
# used to change user passwords.  The default is pam_unix.

# Explanation of pam_unix options:
#
# The "sha512" option enables salted SHA512 passwords.  Without this option,
# the default is Unix crypt.  Prior releases used the option "md5".
#
# The "obscure" option replaces the old 'OBSCURE_CHECKS_ENAB' option in login.defs.
#
# See the pam_unix manpage for other options.

# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
password        required                        pam_pwquality.so retry=3 difok=3 minlen=15 maxrepeat=3 usersubstr=3 enforcing=1 enforce_for_root gecoscheck=1 dictcheck=1 usercheck=1 minclass=4 ocredit=-1 lcredit=-1 ucredit=-1 dcredit=-1
password        [success=1 default=ignore]      pam_unix.so remember=5 obscure use_authtok try_first_pass yescrypt
# here's the fallback if no module succeeds
password        requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
password        required                        pam_permit.so
# and here are more per-package modules (the "Additional" block)
password        optional        pam_gnome_keyring.so
# end of pam-auth-update config
" > /etc/pam.d/common-password
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/common-password\n"


# COMMON SESSION


sudo echo -e "\nChanging configuration for /etc/pam.d/common-session\n"
sudo echo "
#
# /etc/pam.d/common-session - session-related modules common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of modules that define tasks to be performed
# at the start and end of sessions of *any* kind (both interactive and
# non-interactive).
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
session [default=1]                     pam_permit.so
# here's the fallback if no module succeeds
session requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
session required                        pam_permit.so
# The pam_umask module will set the umask according to the system default in
# /etc/login.defs and user settings, solving the problem of different
# umask settings with different shells, display managers, remote sessions etc.
# See "man pam_umask".
session optional                        pam_umask.so
# and here are more per-package modules (the "Additional" block)
session required        pam_unix.so
session optional        pam_systemd.so
# end of pam-auth-update config
" > /etc/pam.d/common-session
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/common-session\n"


# COMMON SESSION NONINTERACTIVE


sudo echo -e "\nChanging configuration for /etc/pam.d/common-session-noninteractive\n"
sudo echo "
#
# /etc/pam.d/common-session-noninteractive - session-related modules
# common to all non-interactive services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of modules that define tasks to be performed
# at the start and end of all non-interactive sessions.
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
session [default=1]                     pam_permit.so
# here's the fallback if no module succeeds
session requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
session required                        pam_permit.so
# The pam_umask module will set the umask according to the system default in
# /etc/login.defs and user settings, solving the problem of different
# umask settings with different shells, display managers, remote sessions etc.
# See "man pam_umask".
session optional                        pam_umask.so
# and here are more per-package modules (the "Additional" block)
session required        pam_unix.so
# end of pam-auth-update config
" > /etc/pam.d/common-session-noninteractive
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/common-session-noninteractive\n"


#CRON


sudo echo -e "\nChanging configuration for /etc/pam.d/cron\n"
sudo echo "
# The PAM configuration file for the cron daemon

@include common-auth

# Sets the loginuid process attribute
session    required     pam_loginuid.so

# Read environment variables from pam_env's default files, /etc/environment
# and /etc/security/pam_env.conf.
session       required   pam_env.so

# In addition, read system locale information
session       required   pam_env.so envfile=/etc/default/locale

@include common-account
@include common-session-noninteractive

# Sets up user limits, please define limits for cron tasks
# through /etc/security/limits.conf
session    required   pam_limits.so
" > /etc/pam.d/cron
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/cron\n"


#LIGHTDM


sudo echo -e "\nChanging configuration for /etc/pam.d/lightdm\n"
sudo echo -e "
#%PAM-1.0
auth    requisite       pam_nologin.so
auth    sufficient      pam_succeed_if.so user ingroup nopasswdlogin
@include common-auth
-auth    optional        pam_gnome_keyring.so
-auth    optional        pam_kwallet.so
-auth    optional        pam_kwallet5.so
@include common-account
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close
#session required        pam_loginuid.so
session required        pam_limits.so
@include common-session
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open
-session optional        pam_gnome_keyring.so auto_start
-session optional        pam_kwallet.so auto_start
-session optional        pam_kwallet5.so auto_start
session required        pam_env.so readenv=1
session required        pam_env.so readenv=1 user_readenv=1 envfile=/etc/default/locale
@include common-password
" > /etc/pam.d/lightdm
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/lightdm\n"


#LIGHTDM-AUTOLOGIN


sudo echo -e "\nChanging configuration for /etc/pam.d/lightdm-autologin\n"
sudo echo -e "
auth    requisite       pam_nologin.so
auth    required        pam_permit.so
@include common-account
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close
#session required        pam_loginuid.so
session required        pam_limits.so
@include common-session
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open
session required        pam_env.so readenv=1
session required        pam_env.so readenv=1 user_readenv=1 envfile=/etc/default/locale
@include common-password
" > /etc/pam.d/lightdm-autologin
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/lightdm-autologin\n"


#LIGHTDM-GREETER
sudo echo -e "\nChanging configuration for /etc/pam.d/lightdm-greeter\n"
sudo echo -e "
#%PAM-1.0
auth    required        pam_permit.so
-auth    optional        pam_gnome_keyring.so
-auth    optional        pam_kwallet.so
-auth    optional        pam_kwallet5.so
@include common-account
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close
session required        pam_limits.so
@include common-session
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open
-session optional        pam_gnome_keyring.so auto_start
-session optional        pam_kwallet.so auto_start
-session optional        pam_kwallet5.so auto_start
session required        pam_env.so readenv=1
session required        pam_env.so readenv=1 user_readenv=1 envfile=/etc/default/locale
" > /etc/pam.d/lightdm-greeter
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/lightdm-greeter\n"


#LOGIN


sudo echo -e "\nChanging configuration for /etc/pam.d/login\n"
sudo echo -e "
auth       required   pam_faildelay.so  delay=4000000
auth       requisite  pam_nologin.so
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close
session    required     pam_loginuid.so
session    optional   pam_motd.so motd=/run/motd.dynamic
session    optional   pam_motd.so noupdate
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open
session       required   pam_env.so readenv=1
session       required   pam_env.so readenv=1 envfile=/etc/default/locale
@include common-auth
auth       optional   pam_group.so
session    required   pam_limits.so
session    optional   pam_lastlog.so
session    optional   pam_mail.so standard
session    optional   pam_keyinit.so force revoke
@include common-account
@include common-session
@include common-password
" > /etc/pam.d/login
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/login\n"


#NEWUSERS


sudo echo -e "\nChanging configuration for /etc/pam.d/newusers\n"
sudo echo "
# The PAM configuration file for the Shadow newusers service
#

@include common-password
" > /etc/pam.d/newusers
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/newusers\n"


#OTHER


sudo echo -e "\nChanging configuration for /etc/pam.d/other\n"
sudo echo "
#
# /etc/pam.d/other - specify the PAM fallback behaviour
#
# Note that this file is used for any unspecified service; for example
#if /etc/pam.d/cron  specifies no session modules but cron calls
#pam_open_session, the session module out of /etc/pam.d/other is
#used.  If you really want nothing to happen then use pam_permit.so or
#pam_deny.so as appropriate.

# We fall back to the system default in /etc/pam.d/common-*
# 

@include common-auth
@include common-account
@include common-password
@include common-session
" > /etc/pam.d/other
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/other\n"


#PASSWD


sudo echo -e "\nChanging configuration for /etc/pam.d/passwd\n"
sudo echo "
# The PAM configuration file for the Shadow passwd service
#

@include common-password
" > /etc/pam.d/passwd
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/passwd\n"


#POLKIT-1


sudo echo -e "\nChanging configuration for /etc/pam.d/polkit-1\n"
sudo echo "
%PAM-1.0

@include common-auth
@include common-account
@include common-password
session       required   pam_env.so readenv=1 user_readenv=0
session       required   pam_env.so readenv=1 envfile=/etc/default/locale user_readenv=0
@include common-session-noninteractive
" > /etc/pam.d/polkit-1
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/polkit-1\n"


#SU


sudo echo -e "\nChanging configuration for /etc/pam.d/su\n"
sudo echo "
#
# The PAM configuration file for the Shadow su service
#

# This allows root to su without passwords (normal operation)
auth       sufficient pam_rootok.so

# Uncomment this to force users to be a member of group wheel
# before they can use su. You can also add group=foo
# to the end of this line if you want to use a group other
# than the default wheel (but this may have side effect of
# denying root user, unless shes a member of foo or explicitly
# permitted earlier by e.g. sufficient pam_rootok.so).
# (Replaces the SU_WHEEL_ONLY option from login.defs)
# auth       required   pam_wheel.so

# Uncomment this if you want wheel members to be able to
# su without a password.
# auth       sufficient pam_wheel.so trust

# Uncomment this if you want members of a specific group to not
# be allowed to use su at all.
# auth       required   pam_wheel.so deny group=nosu

# Uncomment and edit /etc/security/time.conf if you need to set
# time restrainst on su usage.
# (Replaces the PORTTIME_CHECKS_ENAB option from login.defs
# as well as /etc/porttime)
# account    requisite  pam_time.so

# This module parses environment configuration file(s)
# and also allows you to use an extended config
# file /etc/security/pam_env.conf.
# 
# parsing /etc/environment needs readenv=1
session       required   pam_env.so readenv=1
# locale variables are also kept into /etc/default/locale in etch
# reading this file *in addition to /etc/environment* does not hurt
session       required   pam_env.so readenv=1 envfile=/etc/default/locale

# Defines the MAIL environment variable
# However, userdel also needs MAIL_DIR and MAIL_FILE variables
# in /etc/login.defs to make sure that removing a user 
# also removes the users mail spool file.
# See comments in /etc/login.defs
#
# nopen stands to avoid reporting new mail when suing to another user
session    optional   pam_mail.so nopen

# Sets up user limits according to /etc/security/limits.conf
# (Replaces the use of /etc/limits in old login)
session    required   pam_limits.so

# The standard Unix authentication modules, used with
# NIS (man nsswitch) as well as normal /etc/passwd and
# /etc/shadow entries.
@include common-auth
@include common-account
@include common-session
" > /etc/pam.d/su
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/su\n"


#SUDO


sudo echo -e "\nChanging configuration for /etc/pam.d/sudo\n"
sudo echo "
#%PAM-1.0

# Set up user limits from /etc/security/limits.conf.
session    required   pam_limits.so

session    required   pam_env.so readenv=1 user_readenv=0
session    required   pam_env.so readenv=1 envfile=/etc/default/locale user_readenv=0

@include common-auth
@include common-account
@include common-session-noninteractive
" > /etc/pam.d/sudo
sudo echo -e "\nSuccessfully changed configuration for /etc/pam.d/sudo\n"
