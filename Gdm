#RUN AS ROOT!!!
#!/bin/bash
WORKDIR=$(pwd)
USER=$(getent passwd 1000 | cut -d: -f1)

if ! [ "$WORKDIR" = "/etc/gdm3" ]; then
  echo -e "\nYou need to be in the directory path /etc/gdm3.\n"
  exit 1
fi
echo -e "\nStarting GDM script... \n"

for file in /etc/gdm3/*/*
do
  if [ -f "$file" ]; then
    chattr -aAcCdDijPsStTuFx "$file"
    chmod 755 "$file"
    chown root:root "$file"
  fi

  if [ -d "$file" ]; then
    chattr -aAcCdDijPsStTuFx "$file"
    chmod 755 "$file"
    chown root:root "$file"
  fi
done

for file in /etc/gdm3/*
do
  if [ -f "$file" ]; then
    chattr -aAcCdDijPsStTuFx "$file"
    chmod 644 "$file"
    chown root:root "$file"
    chmod 755 /etc/gdm3/Xsession
  fi

  if [ -d "$file" ]; then
    chattr -aAcCdDijPsStTuFx "$file"
    chmod 755 "$file"
    chown root:root "$file"
  fi
done

echo -e "\nChanging permissions for all files in /etc/gdm3/.\n"

echo -e "\nChanging contents of /etc/gdm3/PostLogin/Default.sample\n"
echo -e "#!/bin/sh
#
# Note: this is a sample and will not be run as is.  Change the name of this
# file to <gdmconfdir>/PostLogin/Default for this script to be run.  This
# script will be run before any setup is run on behalf of the user and is
# useful if you for example need to do some setup to create a home directory
# for the user or something like that.  HOME, LOGIN and such will all be
# set appropriately and this script is run as root.
" > /etc/gdm3/PostLogin/Default.sample
echo -e "\nChanged contents of /etc/gdm3/PostLogin/Default.sample\n"

echo -e "\nChanging contents of /etc/gdm3/PostSession/Default\n"
echo -e "#!/bin/sh

exit 0
" > /etc/gdm3/PostSession/Default
echo -e "\nChanged contents of /etc/gdm3/PostSession/Default\n"

echo -e "\nChanging contents of /etc/gdm3/PreSession/Default\n"
echo -e "#!/bin/sh
#
# Note that any setup should come before the sessreg command as
# that must be 'exec'ed for the pid to be correct (sessreg uses the parent
# pid)
#
# Note that output goes into the .xsession-errors file for easy debugging
#
PATH="/usr/bin:$PATH"
" > /etc/gdm3/PreSession/Default
echo -e "\nChanged contents of /etc/gdm3/PreSession/Default\n"

echo -e "\nChanging contents of /etc/gdm3/custom.conf\n"
echo -e "# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.

[daemon]
AutomaticLoginEnable=true
AutomaticLogin=$USER

# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false

# Enabling automatic login

# Enabling timed login
#  TimedLoginEnable = true
#  TimedLogin = user1
#  TimedLoginDelay = 10

[security]
AllowRoot=false
DisallowTCP=true
KillUserProcesses=true

[xdmcp]
Enable=false

[chooser]

[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true
" > /etc/gdm3/custom.conf
echo -e "\nChanged contents of /etc/gdm3/custom.conf\n"

echo -e "\nChanging contents of /etc/gdm3/greeter.dconf-defaults\n"
echo "# These are the options for the greeter session that can be set 
# through GSettings. Any GSettings setting that is used by the 
# greeter session can be set here.

# Note that you must configure the path used by dconf to store the 
# configuration, not the GSettings path.


# Theming options
# ===============
#  - Change the GTK+ theme
[org/gnome/desktop/interface]
# gtk-theme=Adwaita
#  - Use another background
[org/gnome/desktop/background]
# picture-uri=file:///usr/share/themes/Adwaita/backgrounds/stripes.jpg
# picture-options=zoom
#  - Or no background at all
[org/gnome/desktop/background]
# picture-options=none
# primary-color=#000000

# Login manager options
# =====================
[org/gnome/login-screen]
#logo=/usr/share/images/vendor-logos/logo-text-version-64.png

# - Disable user list
disable-user-list=true
allow-guest=false
# - Disable restart buttons
# disable-restart-buttons=true
# - Show a login welcome message
banner-message-enable=true
banner-message-text='Authorized Access Only'

# Automatic suspend
# =================
[org/gnome/settings-daemon/plugins/power]
# - Time inactive in seconds before suspending with AC power
#   1200=20 minutes, 0=never
# sleep-inactive-ac-timeout=1200
# - What to do after sleep-inactive-ac-timeout
#   blank, suspend, shutdown, hibernate, interactive or nothing
# sleep-inactive-ac-type=suspend
# - As above but when on battery
# sleep-inactive-battery-timeout=1200
# sleep-inactive-battery-type=suspend
[org/gnome/desktop/screensaver]
lock-enabled=true
idle-activation-enabled=true
lock-delay=uint32 0
" > /etc/gdm3/greeter.dconf-defaults
echo -e "\nChanged contents of /etc/gdm3/greeter.dconf-defaults\n"

echo -e "\nChanging contents of /etc/init.d/gdm3\n"
echo -e '#! /bin/sh
### BEGIN INIT INFO
# Provides:          gdm3
# Should-Start:      console-screen dbus network-manager
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: GNOME Display Manager
# Description:       Debian init script for the GNOME Display Manager
### END INIT INFO
#
# Author:       Ryan Murray <rmurray@debian.org>
#
set -e

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/gdm3
PIDFILE=/run/gdm3.pid

test -x $DAEMON || exit 0

if [ -r /etc/default/locale ]; then
  . /etc/default/locale
  export LANG LANGUAGE
fi

. /lib/lsb/init-functions

# To start gdm even if it is not the default display manager, change
# HEED_DEFAULT_DISPLAY_MANAGER to "false."
HEED_DEFAULT_DISPLAY_MANAGER=true
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

activate_logind() {
  # Try to dbus activate logind to avoid a race conditions if we are not
  # running systemd as PID1 and we have systemd << 204 package installed (see:
  # #747292)
  if [ ! -d /run/systemd/system ] && [ -x /lib/systemd/systemd-logind-launch ]; then
    dbus-send --system --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus \
      org.freedesktop.DBus.StartServiceByName string:org.freedesktop.login1 uint32:0 2>&1 > /dev/null
  fi
}

case "$1" in
  start)
        CONFIGURED_DAEMON=$(basename "$(cat $DEFAULT_DISPLAY_MANAGER_FILE 2> /dev/null)")
        if grep -wqs text /proc/cmdline; then
            log_warning_msg "Not starting GNOME Display Manager; found text in kernel commandline."
        elif [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ] && \
           [ "$HEED_DEFAULT_DISPLAY_MANAGER" = "true" ] && \
           [ "$CONFIGURED_DAEMON" != gdm3 ] ; then
                log_action_msg "Not starting GNOME Display Manager; it is not the default display manager"
        else
                log_daemon_msg "Starting GNOME Display Manager" "gdm3"
                activate_logind || log_end_msg 1
                /usr/share/gdm/generate-config
                start-stop-daemon --start --quiet --pidfile $PIDFILE \
			--background --exec $DAEMON || log_end_msg 1
                log_end_msg 0
        fi
  ;;
  stop)
        log_daemon_msg "Stopping GNOME Display Manager" "gdm3"
        set +e
        start-stop-daemon --stop --quiet --pidfile $PIDFILE \
                --name gdm3 --retry 5
        set -e
        log_end_msg $?
  ;;
  reload)
        log_daemon_msg "Scheduling reload of GNOME Display Manager configuration" "gdm3"
        /usr/share/gdm/generate-config
        set +e
        start-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE \
                --name gdm3
        set -e
        log_end_msg $?
  ;;
  status)
        status_of_proc -p "$PIDFILE" "$DAEMON" gdm3 && exit 0 || exit $?
  ;;
  restart|force-reload)
        $0 stop
        $0 start
  ;;
  *)
        echo "Usage: /etc/init.d/gdm3 {start|stop|restart|reload|force-reload|status}"
        exit 1
  ;;
esac

exit 0
' > /etc/init.d/gdm3
echo -e "\nChanged contents of /etc/init.d/gdm3\n"
